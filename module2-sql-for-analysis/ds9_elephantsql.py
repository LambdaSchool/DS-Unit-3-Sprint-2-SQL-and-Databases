# -*- coding: utf-8 -*-
"""DS9 elephantSQL

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1z-2C3E9gKaiFg42MAen0N4wV8TLOMtp3
"""

!pip install psycopg2-binary

import psycopg2
dir(psycopg2)

help(psycopg2.connect)

help(psycopg2.extensions)

dbname = 'icgprrgz'
user = 'icgprrgz'
password = 'tqXzetuv_K9FGYkMMFaNN1DjMKtNzreq'
host ='rajje.db.elephantsql.com'

pg_conn = psycopg2.connect(dbname=dbname, user=user, password=password, host=host)

pg_curs = pg_conn.cursor()

pg_curs.execute('SELECT * FROM test_table;')

pg_curs.fetchall()

# from sql lite into elephant sql
# on rpg data

!wget https://github.com/LambdaSchool/DS-Unit-3-Sprint-2-SQL-and-Databases/blob/master/module1-introduction-to-sql/rpg_db.sqlite3?raw=true

# rename rpg file from github

!mv 'rpg_db.sqlite3?raw=true' rpg_db
!ls -alh

import sqlite3
sl_conn = sqlite3.connect('rpg_db')
sl_curs = sl_conn.cursor()

# count of how many names are in db

sl_curs.execute('SELECT COUNT(*) FROM charactercreator_character').fetchall()

# count of how many distinct names in db
# seems like a few are repeats for whatever reason

sl_curs.execute('SELECT COUNT(DISTINCT name) FROM charactercreator_character').fetchall()

# pul out char table

characters = sl_curs.execute('SELECT * FROM charactercreator_character').fetchall()

# check that table is ok
# show first item

characters[0]

# show last item to check all chars made it through the long journey
# [-1] for last item

characters[-1]

# same as showing all chars

len(characters)

# gives us info from character table
# what its made up of
# good reference for a new table

sl_curs.execute('PRAGMA table_info(charactercreator_character);').fetchall()

# be aware of typos, will break code
# and error code will not be too helpful with debugn

create_character_table = """
  CREATE TABLE charactercreator_character(
    character_id SERIAL PRIMARY KEY,
    name VARCHAR(30),
    level INT,
    exp INT,
    hp INT,
    strength INT,
    intelligence INT,
    dexterity INT,
    wisdom INT

);
"""

# ha! it passed throuh without breaking!

pg_curs.execute(create_character_table)

# if it did break (transaction aborted)
# pg_curs.close() close cursor
# pg_conn.commit() commit changes to database
# to close cursor and conn and commit it
# then re run from start of query

show_tables = """
SELECT *
FROM pg_catalog.pg_tables
WHERE schemaname != 'pg_catalog'
AND schemaname != 'information_schema';
"""

# tells us which tables we put in

pg_curs.execute(show_tables)
pg_curs.fetchall()

#pg_curs.close()
#pg_conn.commit()
# fucked around and got transaction aborted.

#pg_conn = psycopg2.connect(dbname=dbname, user=user, password=password, host=host)
#pg_curs = pg_conn.cursor()

# need to chop off id
#[1:] gets rid of id #
# characters[0]

str(characters[0][1:])

# example
# from this we are only doing 1 character
# need to do it for all 302 characters

example_insert = """
INSERT INTO charactercreator_character
(name, level, exp, hp, strength, intelligence, dexterity, wisdom)
VALUES """ + str(characters[0][1:]) + ";"

print(example_insert)

# need a for loop

for character in characters:
  insert_character = """
    INSERT INTO charactercreator_character
    (name, level, exp, hp, strength, intelligence, dexterity, wisdom)
    VALUES """ + str(character[1:]) + ";" 
  pg_curs.execute(insert_character)

# check tht it worked

pg_curs.execute('SELECT * from charactercreator_character;')
pg_curs.fetchall()

# great success!

pg_characters = pg_curs.fetchall()

pg_curs.close()
pg_conn.commit()

pg_curs = pg_conn.cursor()
pg_curs.execute('SELECT * FROM charactercreator_character;')
pg_characters = pg_curs.fetchall()

pg_characters

characters[0:3]

pg_characters[0:3]

# compare the two lists

for characters, pg_character in zip(characters, pg_characters):
  assert characters != pg_characters





